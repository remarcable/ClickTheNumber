{"version":3,"sources":["pages/pages.js","components/Footer/Footer.js","components/Button/Button.js","pages/Introduction.js","lib/Timer.js","components/NumberBox/NumberBox.js","pages/Game.js","pages/Score.js","pages/PageRenderer.js","lib/RandomRange.js","lib/toggleFullscreen.js","FullscreenButton/index.js","components/App.js","index.js"],"names":["pages","Footer","className","rel","target","href","Button","isLifted","isSmall","children","onClick","type","classnames","lifted","small","Introduction","startGame","this","startTime","endTime","window","performance","now","NumberBox","n","currentNumber","handleGameClick","active","onMouseDown","Game","Timer","start","stop","props","updateElapsedTime","getElapsed","randomNumbers","map","key","Component","gameDoneMessages","Score","showIntroduction","elapsedTime","toFixed","getElapsedSeconds","random","PageRenderer","currentState","page","randomRange","toNumber","shuffle","Array","keys","toggleFullscreen","document","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","FullscreenIcon","xmlns","height","width","fill","d","FullscreenButton","alt","App","state","clickedNumber","nextNumber","setState","doneBody","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7fcb679.chunk.js","sourcesContent":["export const pages = {\n  INTRODUCTION: \"INTRODUCTION\",\n  GAME: \"GAME\",\n  SCORE: \"SCORE\",\n};\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n  <footer className=\"github\">\n    Made with ❤︎ by{\" \"}\n    <a\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      href=\"https://github.com/lightningboss/ClickTheNumber\"\n    >\n      Marc\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport \"./Button.css\";\n\nconst propTypes = {\n  isLifted: PropTypes.bool,\n  isSmall: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nconst Button = ({ isLifted, isSmall, children, onClick }) => (\n  <button\n    type=\"button\"\n    className={classnames(\"btn\", { lifted: isLifted, small: isSmall })}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = propTypes;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../components/Button/Button\";\nimport \"./Introduction.css\";\n\nconst propTypes = {\n  startGame: PropTypes.func,\n};\n\nconst Introduction = ({ startGame }) => (\n  <main className=\"introduction\">\n    <h1 className=\"title\">Click The Number</h1>\n    <h2 className=\"subtitle\">\n      Test your reaction time with <br /> this fun and simple game.\n    </h2>\n    <Button onClick={startGame}>Start Now</Button>\n  </main>\n);\n\nIntroduction.propTypes = propTypes;\n\nexport default Introduction;\n","class Timer {\n  constructor() {\n    this.startTime = 0;\n    this.endTime = 0;\n  }\n\n  start() {\n    this.startTime = window.performance.now();\n  }\n\n  stop() {\n    this.endTime = window.performance.now();\n  }\n\n  getElapsed() {\n    return this.endTime - this.startTime;\n  }\n}\n\nexport default new Timer();\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport \"./NumberBox.css\";\n\nconst propTypes = {\n  n: PropTypes.number.isRequired,\n  currentNumber: PropTypes.number.isRequired,\n  handleGameClick: PropTypes.func.isRequired,\n};\n\nconst NumberBox = ({ n, currentNumber, handleGameClick }) => (\n  <button\n    className={classnames(\"number\", { active: currentNumber >= n })}\n    onMouseDown={() => handleGameClick(n)}\n  >\n    {n}\n  </button>\n);\n\nNumberBox.propTypes = propTypes;\n\nexport default NumberBox;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Timer from \"../lib/Timer\";\nimport NumberBox from \"../components/NumberBox/NumberBox\";\n\nconst propTypes = {\n  randomNumbers: PropTypes.array.isRequired,\n  currentNumber: PropTypes.number.isRequired,\n  handleGameClick: PropTypes.func.isRequired,\n  updateElapsedTime: PropTypes.func.isRequired,\n};\n\nexport default class Game extends Component {\n  componentDidMount() {\n    Timer.start();\n  }\n\n  componentWillUnmount() {\n    Timer.stop();\n    this.props.updateElapsedTime(Timer.getElapsed());\n  }\n\n  render() {\n    const { randomNumbers, currentNumber, handleGameClick } = this.props;\n\n    return (\n      <main>\n        {randomNumbers.map((n) => (\n          <NumberBox\n            n={n}\n            key={n}\n            currentNumber={currentNumber}\n            handleGameClick={handleGameClick}\n          />\n        ))}\n      </main>\n    );\n  }\n}\n\nGame.propTypes = propTypes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport random from \"just-random\";\n\nimport Button from \"../components/Button/Button\";\nimport \"./Score.css\";\n\nconst propTypes = {\n  showIntroduction: PropTypes.func.isRequired,\n  elapsedTime: PropTypes.number.isRequired,\n};\n\nconst Score = ({ showIntroduction, elapsedTime }) => {\n  return (\n    <main>\n      <div className=\"done\">\n        Your time: {getElapsedSeconds(elapsedTime)}s – {random(gameDoneMessages)}\n      </div>\n      <Button onClick={showIntroduction} isLifted>\n        Restart\n      </Button>\n    </main>\n  );\n};\n\nScore.propTypes = propTypes;\n\nconst gameDoneMessages = [\n  \"Well done!\",\n  \"Really good!\",\n  \"Awesome!\",\n  \"Excellent!\",\n  \"Good job!\",\n  \"Bravo!\",\n  \"Fantastic!\",\n  \"Keep it up!\",\n];\n\nfunction getElapsedSeconds(elapsedTime) {\n  const elapsedSeconds = elapsedTime / 1000;\n  return elapsedSeconds.toFixed(2);\n}\n\nexport default Score;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { pages } from \"./pages\";\nimport Introduction from \"../pages/Introduction\";\nimport Game from \"../pages/Game\";\nimport Score from \"../pages/Score\";\n\nconst propTypes = {\n  currentState: PropTypes.shape({\n    page: PropTypes.string.isRequired,\n    currentNumber: PropTypes.number,\n    randomNumbers: PropTypes.arrayOf(PropTypes.number.isRequired),\n    elapsedTime: PropTypes.number.isRequired,\n  }).isRequired,\n  handleGameClick: PropTypes.func.isRequired,\n  showIntroduction: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  updateElapsedTime: PropTypes.func.isRequired,\n};\n\nconst PageRenderer = ({\n  currentState: { page, currentNumber, randomNumbers, elapsedTime },\n  handleGameClick,\n  showIntroduction,\n  startGame,\n  updateElapsedTime,\n}) => {\n  if (page === pages.GAME) {\n    return (\n      <Game\n        currentNumber={currentNumber}\n        randomNumbers={randomNumbers}\n        handleGameClick={handleGameClick}\n        updateElapsedTime={updateElapsedTime}\n      />\n    );\n  }\n\n  if (page === pages.SCORE) {\n    return <Score showIntroduction={showIntroduction} elapsedTime={elapsedTime} />;\n  }\n\n  // => page === pages.INTRODUCTION\n  return <Introduction startGame={startGame} />;\n};\n\nPageRenderer.propTypes = propTypes;\n\nexport default PageRenderer;\n","import shuffle from \"just-shuffle\";\n\nexport default function randomRange(toNumber) {\n  return shuffle([...Array(toNumber).keys()]).map((n) => n + 1);\n}\n","export default function toggleFullscreen() {\n  if (document.fullscreenElement === null) {\n    document.documentElement.requestFullscreen();\n  } else {\n    document.exitFullscreen();\n  }\n}\n","import React from \"react\";\nimport toggleFullscreen from \"../lib/toggleFullscreen\";\nimport \"./FullscreenButton.css\";\n\nconst FullscreenButton = () => (\n  <button\n    type=\"button\"\n    onClick={toggleFullscreen}\n    className=\"fullscreen-button\"\n    alt=\"Go Fullscreen\"\n  >\n    <FullscreenIcon />\n  </button>\n);\n\nconst FullscreenIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" fill=\"white\">\n    <path d=\"M10 38v-9.65h3V35h6.65v3Zm0-18.35V10h9.65v3H13v6.65ZM28.35 38v-3H35v-6.65h3V38ZM35 19.65V13h-6.65v-3H38v9.65Z\" />\n  </svg>\n);\n\nexport default FullscreenButton;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nimport { pages } from \"../pages/pages\";\nimport Footer from \"../components/Footer/Footer\";\nimport PageRenderer from \"../pages/PageRenderer\";\nimport randomRange from \"../lib/RandomRange\";\n\nimport \"./App.css\";\nimport FullscreenButton from \"../FullscreenButton\";\n\nconst NUMBER_BOX_COUNT = 25;\n\nclass App extends Component {\n  state = { page: pages.INTRODUCTION, elapsedTime: 0 };\n  handleGameClick = (clickedNumber) => {\n    const { currentNumber } = this.state;\n    const nextNumber = currentNumber + 1;\n    if (clickedNumber === nextNumber) {\n      this.setState({ currentNumber: nextNumber });\n    }\n\n    if (nextNumber === NUMBER_BOX_COUNT) {\n      this.setState({ page: pages.SCORE });\n    }\n  };\n\n  startGame = () => {\n    const randomNumbers = randomRange(NUMBER_BOX_COUNT);\n    this.setState({ page: pages.GAME, currentNumber: 0, randomNumbers });\n  };\n\n  showIntroduction = () => {\n    this.setState({ page: pages.INTRODUCTION });\n  };\n\n  updateElapsedTime = (elapsedTime) => {\n    this.setState({ elapsedTime });\n  };\n\n  render() {\n    return (\n      <div className={classnames(\"App\", { doneBody: this.state.page === pages.SCORE })}>\n        <FullscreenButton />\n        <Footer />\n        <PageRenderer\n          currentState={this.state}\n          handleGameClick={this.handleGameClick}\n          startGame={this.startGame}\n          showIntroduction={this.showIntroduction}\n          updateElapsedTime={this.updateElapsedTime}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}